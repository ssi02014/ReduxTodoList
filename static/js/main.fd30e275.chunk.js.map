{"version":3,"sources":["components/Counter.js","modules/counter.js","containers/CounterContainer.js","modules/todos.js","components/Todos.js","containers/TodosContainer.js","App.js","reportWebVitals.js","modules/index.js","index.js"],"names":["Counter","number","onIncrease","onDecrease","onClick","INCREASE","DECREASE","increase","createAction","decrease","counter","handleActions","state","action","connect","dispatch","CHANGE_INPUT","INSERT","TOGGLE","REMOVE","changeInput","input","id","insert","text","done","toggle","remove","todos","payload","todo","concat","map","filter","TodoItem","onToggle","onRemove","type","checked","readOnly","style","textDecoration","Todos","onChangeInput","onInsert","onSubmit","e","preventDefault","value","onChange","target","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","rootReducer","combineReducers","store","createStore","composeWithDevTools","ReactDOM","render","document","getElementById"],"mappings":"mOAceA,EAZC,SAAC,GAAwC,IAAtCC,EAAqC,EAArCA,OAAQC,EAA6B,EAA7BA,WAAYC,EAAiB,EAAjBA,WACnC,OACI,gCACI,6BAAKF,IACL,gCACI,wBAAQG,QAASF,EAAjB,gBACA,wBAAQE,QAASD,EAAjB,uB,uBCNVE,EAAW,mBACXC,EAAW,mBAEJC,EAAWC,YAAaH,GACxBI,EAAWD,YAAaF,GActBI,EARCC,aAAa,mBAEpBN,GAAW,SAACO,EAAOC,GAAR,MAAoB,CAACZ,OAASW,EAAMX,OAAS,MAFpC,cAGpBK,GAAW,SAACM,EAAOC,GAAR,MAAoB,CAACZ,OAASW,EAAMX,OAAS,MAHpC,GAJR,CACjBA,OAAQ,ICYGa,eAXS,SAAAF,GAAK,MAAK,CAC9BX,OAAQW,EAAMF,QAAQT,WAEC,SAAAc,GAAQ,MAAK,CACpCR,SAAU,WACNQ,EAASR,MAEbE,SAAU,WACNM,EAASN,SAGFK,EAhBU,SAAC,GAAoC,IAAlCb,EAAiC,EAAjCA,OAAQM,EAAyB,EAAzBA,SAAUE,EAAe,EAAfA,SAC1C,OACI,cAAC,EAAD,CAASR,OAAQA,EAAQC,WAAYK,EAAUJ,WAAYM,O,OCL7DO,EAAe,qBACfC,EAAS,eACTC,EAAS,eACTC,EAAS,eAEFC,EAAcZ,YAAaQ,GAAc,SAAAK,GAAK,OAAIA,KAE3DC,EAAK,EAEIC,EAASf,YAAaS,GAAQ,SAAAO,GAAI,MAAM,CACjDF,GAAKA,IACLE,OACAC,MAAM,MAGGC,EAASlB,YAAaU,GAAQ,SAAAI,GAAE,OAAIA,KAEpCK,EAASnB,YAAaW,GAAQ,SAAAG,GAAE,OAAIA,KAsClCM,EApBDjB,aAAa,iBAAC,EAEnBK,GAAe,SAACJ,EAAD,OAAkBS,EAAlB,EAAQQ,QAAR,mBAAC,eAAkCjB,GAAnC,IAA0CS,aAFvC,YAAC,EAGnBJ,GAAS,SAACL,EAAD,OAAmBkB,EAAnB,EAASD,QAAT,mBAAC,eACJjB,GADG,IAENgB,MAAOhB,EAAMgB,MAAMG,OAAOD,QALX,YAAC,EAOnBZ,GAAS,SAACN,EAAD,OAAmBU,EAAnB,EAASO,QAAT,mBAAC,eACJjB,GADG,IAENgB,MAAOhB,EAAMgB,MAAMI,KAAI,SAAAF,GAAI,OACvBA,EAAKR,KAAOA,EAAZ,2BAAsBQ,GAAtB,IAA4BL,MAAOK,EAAKL,OAAOK,UAVpC,YAAC,EAYnBX,GAAS,SAACP,EAAD,OAAmBU,EAAnB,EAASO,QAAT,mBAAC,eACJjB,GADG,IAENgB,MAAOhB,EAAMgB,MAAMK,QAAO,SAAAH,GAAI,OAAIA,EAAKR,KAAOA,UAd/B,GAhBN,CACjBD,MAAQ,GACRO,MAAQ,CACJ,CACIN,GAAI,EACJE,KAAM,qDACNC,MAAO,GAEX,CACIH,GAAG,EACHE,KAAM,uEACNC,MAAM,MC9BZS,EAAW,SAAC,GAAkC,IAA/BJ,EAA8B,EAA9BA,KAAMK,EAAwB,EAAxBA,SAAUC,EAAc,EAAdA,SACjC,OACI,gCACI,uBAAOC,KAAK,WACRjC,QAAS,kBAAK+B,EAASL,EAAKR,KAC5BgB,QAASR,EAAKL,KACdc,UAAU,IAEd,sBAAMC,MAAO,CAACC,eAAgBX,EAAKL,KAAM,eAAiB,QAA1D,SACKK,EAAKN,OAEV,wBAAQpB,QAAS,kBAAMgC,EAASN,EAAKR,KAArC,8BAsCGoB,EAlCD,SAAC,GAOR,IANHrB,EAME,EANFA,MACAO,EAKE,EALFA,MACAe,EAIE,EAJFA,cACAC,EAGE,EAHFA,SACAT,EAEE,EAFFA,SACAC,EACE,EADFA,SAQA,OACI,gCACI,uBAAMS,SARG,SAAAC,GACbA,EAAEC,iBACFH,EAASvB,GACTsB,EAAc,KAKV,UACI,uBAAOK,MAAO3B,EAAO4B,SAJhB,SAAAH,GAAC,OAAIH,EAAcG,EAAEI,OAAOF,UAKjC,wBAAQX,KAAK,SAAb,6BAEJ,8BACKT,EAAMI,KAAI,SAAAF,GAAI,OACX,cAAC,EAAD,CACIA,KAAMA,EAENK,SAAUA,EACVC,SAAUA,GAFLN,EAAKR,aChBnBR,eACX,gBAAEc,EAAF,EAAEA,MAAF,MAAc,CACVP,MAAOO,EAAMP,MACbO,MAAOA,EAAMA,SAEjB,CACIR,cACAG,SACAG,SACAC,UATOb,EApBQ,SAAC,GAOjB,IANHO,EAME,EANFA,MACAO,EAKE,EALFA,MACAR,EAIE,EAJFA,YACAG,EAGE,EAHFA,OACAG,EAEE,EAFFA,OACAC,EACE,EADFA,OAEA,OACI,cAAC,EAAD,CACIN,MAAOA,EACPO,MAAOA,EACPe,cAAevB,EACfwB,SAAUrB,EACVY,SAAUT,EACVU,SAAUT,OCNPwB,MAVf,WACE,OACE,gCACE,cAAC,EAAD,IACA,uBACA,cAAC,EAAD,QCGSC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,O,OCECQ,EALKC,0BAAgB,CAChCpD,UACAkB,U,QCKEmC,EAAQC,sBAAYH,EAAaI,iCAEvCC,IAASC,OACP,cAAC,IAAD,CAAUJ,MAAOA,EAAjB,SACI,cAAC,EAAD,MAEJK,SAASC,eAAe,SAM1BjB,M","file":"static/js/main.fd30e275.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst Counter = ( {number, onIncrease, onDecrease }) => {\r\n    return (\r\n        <div>\r\n            <h1>{number}</h1>\r\n            <div>\r\n                <button onClick={onIncrease}>+1</button>\r\n                <button onClick={onDecrease}>-1</button>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Counter;","import { createAction, handleActions } from \"redux-actions\";\r\n\r\nconst INCREASE = 'counter/INCREASE';\r\nconst DECREASE = 'counter/DECREASE';\r\n\r\nexport const increase = createAction(INCREASE);\r\nexport const decrease = createAction(DECREASE);\r\n\r\nconst initialState = {\r\n    number: 0\r\n}\r\n\r\nconst counter = handleActions(\r\n    {\r\n        [INCREASE]: (state, action) => ({number : state.number + 1}),\r\n        [DECREASE]: (state, action) => ({number : state.number - 1})\r\n    },\r\n    initialState,\r\n);\r\n\r\nexport default counter;","import React from 'react';\r\nimport { connect } from 'react-redux'\r\nimport Counter from '../components/Counter';\r\nimport { increase, decrease } from '../modules/counter'\r\n\r\nconst CounterContainer = ({ number, increase, decrease }) => {\r\n    return (\r\n        <Counter number={number} onIncrease={increase} onDecrease={decrease} />\r\n    );\r\n};\r\nconst mapStateToProps = state => ({\r\n    number: state.counter.number,\r\n})\r\nconst mapDispatchToProps = dispatch => ({\r\n    increase: () => {\r\n        dispatch(increase());\r\n    },\r\n    decrease: () => {\r\n        dispatch(decrease());\r\n    }\r\n});\r\nexport default connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps,\r\n)(CounterContainer);","import { createAction, handleActions } from \"redux-actions\";\r\n\r\nconst CHANGE_INPUT = 'todos/CHANGE_INPUT'; //인풋 값을 변경\r\nconst INSERT = 'todos/INSERT'; //새로운 todo를 등록\r\nconst TOGGLE = 'todos/TOGGLE'; //todo를 체크/ 체크 해제\r\nconst REMOVE = 'todos/REMOVE'; //todo를 제거\r\n\r\nexport const changeInput = createAction(CHANGE_INPUT, input => input);\r\n\r\nlet id = 3; //insert가 호출될 때마다 1씩 더해짐\r\n\r\nexport const insert = createAction(INSERT, text => ( {\r\n    id : id++,\r\n    text,\r\n    done: false\r\n}));\r\n\r\nexport const toggle = createAction(TOGGLE, id => id);\r\n\r\nexport const remove = createAction(REMOVE, id => id);\r\n\r\nconst initialState = {\r\n    input : '',\r\n    todos : [\r\n        {\r\n            id: 1,\r\n            text: '리덕스 기초 배우기',\r\n            done : true\r\n        },\r\n        {\r\n            id:2,\r\n            text: '리액트와 리덕스 사용하기',\r\n            done: false\r\n        }\r\n    ]\r\n};\r\n\r\nconst todos = handleActions(\r\n    {\r\n        [CHANGE_INPUT]: (state,{payload : input}) => ({ ...state, input}),\r\n        [INSERT]: (state, {payload : todo}) => ({\r\n            ...state,\r\n            todos: state.todos.concat(todo),\r\n        }),\r\n        [TOGGLE]: (state, {payload : id}) => ({\r\n            ...state,\r\n            todos: state.todos.map(todo =>\r\n                todo.id === id ? { ...todo, done: !todo.done}: todo),\r\n        }),\r\n        [REMOVE]: (state, {payload : id}) => ({\r\n            ...state,\r\n            todos: state.todos.filter(todo => todo.id !== id)\r\n        }),\r\n    },\r\n    initialState,\r\n);\r\n\r\nexport default todos;","import React from 'react';\r\n\r\nconst TodoItem = ( { todo, onToggle, onRemove}) => {\r\n    return (\r\n        <div>\r\n            <input type='checkbox'\r\n                onClick={()=> onToggle(todo.id)}\r\n                checked={todo.done}\r\n                readOnly={true}\r\n            />\r\n            <span style={{textDecoration: todo.done? 'line-through' : 'none'}}>\r\n                {todo.text}\r\n            </span>\r\n            <button onClick={() => onRemove(todo.id)}>삭제</button>\r\n        </div>\r\n    );\r\n};\r\nconst Todos = ({\r\n    input,\r\n    todos,\r\n    onChangeInput,\r\n    onInsert,\r\n    onToggle,\r\n    onRemove,\r\n}) => {\r\n    const onSubmit = e => {\r\n        e.preventDefault();\r\n        onInsert(input);\r\n        onChangeInput('');\r\n    };\r\n    const onChange = e => onChangeInput(e.target.value);\r\n    return (\r\n        <div>\r\n            <form onSubmit={onSubmit}>\r\n                <input value={input} onChange={onChange}></input>\r\n                <button type='submit'>등록</button>\r\n            </form>\r\n            <div>\r\n                {todos.map(todo => (\r\n                    <TodoItem\r\n                        todo={todo}\r\n                        key={todo.id}\r\n                        onToggle={onToggle}\r\n                        onRemove={onRemove}\r\n                    />\r\n                ))}\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Todos;","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { changeInput, insert, toggle, remove} from '../modules/todos'\r\nimport Todos from '../components/Todos';\r\n\r\nconst TodosContainer = ({\r\n    input,\r\n    todos,\r\n    changeInput,\r\n    insert,\r\n    toggle,\r\n    remove,\r\n}) => {\r\n    return (\r\n        <Todos\r\n            input={input}\r\n            todos={todos}\r\n            onChangeInput={changeInput}\r\n            onInsert={insert}\r\n            onToggle={toggle}\r\n            onRemove={remove}\r\n        ></Todos>\r\n    )\r\n}\r\n\r\nexport default connect(\r\n    ({todos}) => ({\r\n        input: todos.input,\r\n        todos: todos.todos\r\n    }),\r\n    {\r\n        changeInput,\r\n        insert,\r\n        toggle,\r\n        remove,\r\n    },\r\n)(TodosContainer);","import './App.css';\nimport CounterContainer from './containers/CounterContainer';\nimport TodosContainer from './containers/TodosContainer';\n\nfunction App() {\n  return (\n    <div>\n      <CounterContainer />\n      <hr />\n      <TodosContainer />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { combineReducers} from 'redux';\r\nimport counter from './counter'\r\nimport todos from './todos'\r\n\r\nconst rootReducer = combineReducers({\r\n    counter,\r\n    todos,\r\n});\r\n\r\nexport default rootReducer;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { createStore } from 'redux';\nimport { Provider } from 'react-redux';\nimport rootReducer from './modules';\nimport { composeWithDevTools } from 'redux-devtools-extension';\n\n\nconst store = createStore(rootReducer, composeWithDevTools());\n\nReactDOM.render(\n  <Provider store={store}>\n      <App />\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}